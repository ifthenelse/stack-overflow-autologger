name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

jobs:
  lint-and-format:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Fix config files format
        run: |
          # Fix Prettier config if it uses ES modules
          if [ -f .prettierrc.js ] && grep -q "export default" .prettierrc.js; then
            echo "Converting .prettierrc.js to .prettierrc.json for compatibility..."
            # Create JSON version
            echo '{
              "semi": true,
              "singleQuote": true,
              "tabWidth": 2,
              "useTabs": false
            }' > .prettierrc.json
            rm .prettierrc.js
            echo "Prettier config converted to JSON format"
          fi

      - name: Run ESLint
        run: |
          echo "Running ESLint..."
          if npx eslint . --format=stylish; then
            echo "✅ ESLint passed with no errors"
          else
            echo "❌ ESLint found issues"
            echo "## ESLint Results" >> $GITHUB_STEP_SUMMARY
            echo "ESLint found formatting or code quality issues. Please run:" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
            echo "npx eslint . --fix" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

      - name: Check Prettier formatting
        run: |
          echo "Checking Prettier formatting..."
          if npx prettier --check .; then
            echo "✅ Prettier formatting is correct"
          else
            echo "❌ Prettier formatting issues found"
            echo "## Prettier Results" >> $GITHUB_STEP_SUMMARY
            echo "Code formatting issues found. Please run:" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
            echo "npx prettier --write ." >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

  security-scan:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        id: audit
        run: |
          echo "🔍 Running security audit..."

          # Run audit and capture output
          if npm audit --audit-level=moderate > audit_output.txt 2>&1; then
            echo "✅ No security vulnerabilities found at moderate level or above"
            echo "audit_status=success" >> $GITHUB_OUTPUT
          else
            echo "⚠️ Security vulnerabilities detected"
            echo "audit_status=vulnerabilities_found" >> $GITHUB_OUTPUT
            
            # Display the vulnerabilities
            echo "## Security Audit Results" >> $GITHUB_STEP_SUMMARY
            echo "The following vulnerabilities were found:" >> $GITHUB_STEP_SUMMARY
            echo "```" >> $GITHUB_STEP_SUMMARY
            cat audit_output.txt >> $GITHUB_STEP_SUMMARY
            echo "```" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "💡 **Recommendation**: Run \`npm audit fix\` to automatically fix these issues." >> $GITHUB_STEP_SUMMARY
            
            # Show the vulnerabilities in the log too
            cat audit_output.txt
            
            # Don't fail the workflow for security issues, just report them
            exit 0
          fi

      - name: Upload audit results
        if: steps.audit.outputs.audit_status == 'vulnerabilities_found'
        uses: actions/upload-artifact@v4
        with:
          name: security-audit-results
          path: audit_output.txt
          retention-days: 30

      - name: Run CodeQL Analysis
        uses: github/codeql-action/init@v3
        with:
          languages: javascript

      - name: Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  dependency-review:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Dependency Review
        uses: actions/dependency-review-action@v4
